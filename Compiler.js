
var encoding = "utf-8";
var end_of_line = "\n";

var outfile = "./concat.js";

// get file system module
var fs = require('fs');
// get file list (generated by php)


var Compiler = (function(){

  var cl = require('./Classloader.js');
  
  var Compiler = function Compiler()
  {
    this.classloader = new cl();

    // import methods that will be used by code to be compiled
    Package = this.classloader.Package;
    Import = this.classloader.Import;
    Extends = this.classloader.Extends;
    Singleton = this.classloader.Singleton;
    Class = this.classloader.Class;
    parseMethods = this.classloader.parseMethods;
    XMLResource = this.classloader.XMLResource;
    CSSResource = this.classloader.CSSResource;
    Static = this.classloader.Static;
    Protected = this.classloader.Protected;
    Public = this.classloader.Public;
    classList = this.classloader.classList;
    namespaces = this.classloader.namespaces;
    getName = this.classloader.getName;
  }

  Compiler.prototype.Compiler = Compiler;

  Compiler.prototype.compile = function compile()
  {
    require(outfile).code();
  }

  Compiler.prototype.getList = function compile()
  {
    for (var i = 0; i < this.classloader.classList.length; i++) 
    {
      console.log(this.classloader.classList[i].getName())
    };
  }

  Compiler.prototype.writeNamespaces = function writeNamespaces(namespaces, isroot) 
  {
    var str = "";
    for(var name in namespaces)
    {
      if(isroot)
        str += "var " + name +" = {" + writeNamespaces(namespaces[name])+ "}; ";
      else
        str += name +": {" + writeNamespaces(namespaces[name])+ "},";
    }

    return str.substring(0, str.length - 1);
  };


  return Compiler;
})();



var compiler = new Compiler();
compiler.compile();
compiler.getList();

//console.log(writeNamespaces(classloader.namespaces, true));

